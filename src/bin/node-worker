#!/usr/bin/env node

"use strict";
if(process.argv.length > 3) {
	var path = require('path');
	var fs= require('fs');
	var lib = path.join(path.dirname(fs.realpathSync(__filename)), '../lib');
	var NodeWorker=require(lib+'/node-queue.js').NodeWorker;

	var workers=0;
	var queue="";
	var db_config_option='';
	for(var i=0;i<process.argv.length;i++){
		var param=process.argv[i];
		if(param.indexOf('QUEUE=')==0){
			queue=param.replace("QUEUE=","");
		}else if(param.indexOf('WORKERS=')==0){
			workers=parseInt(param.replace('WORKERS=',''));
		}else if(param.indexOf('DB_CONFIG=')==0){
			db_config_option=param.replace("DB_CONFIG=","");
		}
	}
	if(workers==0) workers=1;
	if(queue==""){
		console.log("ERROR: Invalid Parameter -- below is the use case");
	 	console.log("node-worker QUEUE=queue1 WORKERS=2 DB_CONFIG=config_name");
	 	console.log("DB_CONFIG is optional");
	}else{
		var db_config=undefined;
		if(db_config_option!=''){
			var ENVIRONMENT=process.env.NODE_ENV;	
			if(ENVIRONMENT=="" || ENVIRONMENT==undefined) ENVIRONMENT="development";
			var Config = require(path.join(path.dirname(fs.realpathSync(__filename)), '../node_modules/config-js/index.js'));
			if(!Config){
				Config = require(path.join(path.dirname(fs.realpathSync(__filename)), '../node_modules/config-js/index.js')).Config;
			}
			GLOBAL.CONFIG=new Config('./config/'+ENVIRONMENT+'.js');
			db_config=CONFIG.get(db_config_option);
		}
		var node_worker=new NodeWorker(db_config);
		node_worker.startWorkers(queue,workers);
	}
}else{
	 console.log("ERROR: Invalid Parameter -- below is the use case");
	 console.log("node-worker QUEUE=queue1 WORKERS=2");
}